{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CrearReportePlanillaMensual(){var _tiposPlanilla$find;const[selectedYear,setSelectedYear]=useState('');const[selectedMonth,setSelectedMonth]=useState('');const[selectedTipoPlanilla,setSelectedTipoPlanilla]=useState('');const[tiposPlanilla,setTiposPlanilla]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[reporteData,setReporteData]=useState(null);const[showPopup,setShowPopup]=useState(true);const[isProcessing,setIsProcessing]=useState(false);useEffect(()=>{const handleEscape=event=>{if(event.key==='Escape'){setShowPopup(false);setSelectedYear('');setSelectedMonth('');setSelectedTipoPlanilla('');}};document.addEventListener('keydown',handleEscape);// Cargar tipos de planilla\nconst fetchTiposPlanilla=async()=>{try{const response=await axios.get('http://localhost:5001/api/tipos-planilla');console.log('Tipos de planilla cargados:',response.data);setTiposPlanilla(response.data);}catch(error){console.error('Error al cargar tipos de planilla:',error);setError('Error al cargar tipos de planilla. Por favor, intente de nuevo más tarde.');}};fetchTiposPlanilla();return()=>{document.removeEventListener('keydown',handleEscape);};},[]);const handleGenerar=async()=>{setIsProcessing(true);setError(null);setReporteData(null);const requestData={año:parseInt(selectedYear,10),mes:parseInt(selectedMonth,10),id_tip_planilla:parseInt(selectedTipoPlanilla,10)};console.log('Iniciando generación de reporte');console.log('Datos a enviar:',requestData);try{console.log('Enviando solicitud al servidor...');const response=await axios.post('http://localhost:5001/api/planilla-mensual/reporte',requestData);console.log('Respuesta del servidor recibida:',response.data);if(response.data&&response.data.empleados){console.log('Número de empleados en el reporte:',response.data.empleados.length);}else{console.warn('La respuesta no contiene datos de empleados');}setReporteData(response.data);}catch(error){console.error('Error al generar el reporte:',error);if(error.response){console.error('Respuesta de error del servidor:',error.response.data);setError(`Error al generar el reporte: ${error.response.data.message}`);}else{setError('Error al generar el reporte. Por favor, intente de nuevo más tarde.');}}setIsProcessing(false);setShowPopup(false);console.log('Proceso de generación de reporte finalizado');};const years=Array.from({length:10},(_,i)=>new Date().getFullYear()-i);const months=['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];if(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Cargando...\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Listado de Empleados\"}),showPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"popup-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"popup-header\",children:\"Seleccione los par\\xE1metros del Reporte\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"select-container\",children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedTipoPlanilla,onChange:e=>setSelectedTipoPlanilla(e.target.value),className:\"select-input\",style:{color:selectedTipoPlanilla===''?'#808080':'black'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Seleccione tipo de planilla\"}),tiposPlanilla.map(tipo=>/*#__PURE__*/_jsx(\"option\",{value:tipo.ID_tipo,children:tipo.Nombre},tipo.ID_tipo))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedYear,onChange:e=>setSelectedYear(e.target.value),className:\"select-input\",style:{color:selectedYear===''?'#808080':'black'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Seleccione a\\xF1o\"}),years.map(year=>/*#__PURE__*/_jsx(\"option\",{value:year,children:year},year))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedMonth,onChange:e=>setSelectedMonth(e.target.value),className:\"select-input\",style:{color:selectedMonth===''?'#808080':'black'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Seleccione mes\"}),months.map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index+1,children:month},index))]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGenerar,disabled:!selectedYear||!selectedMonth||!selectedTipoPlanilla||isProcessing,className:\"submit-button\",children:isProcessing?'Procesando...':'Generar Reporte'})]})]})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),reporteData&&/*#__PURE__*/_jsxs(\"div\",{className:\"reporte-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"PLANILLA DE EMPLEADOS:\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"A\\xD1O: \",selectedYear]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"MES: \",months[parseInt(selectedMonth)-1]]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"TIPO DE PLANILLA: \",(_tiposPlanilla$find=tiposPlanilla.find(tipo=>tipo.ID_tipo===parseInt(selectedTipoPlanilla)))===null||_tiposPlanilla$find===void 0?void 0:_tiposPlanilla$find.Nombre]}),/*#__PURE__*/_jsxs(\"table\",{className:\"reporte-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Nombres\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Apellidos\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Salario\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tot. Ingreso\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tot. Descto\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Neto a pagar\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:reporteData.empleados.map((empleado,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:empleado.nombres}),/*#__PURE__*/_jsx(\"td\",{children:empleado.apellidos}),/*#__PURE__*/_jsx(\"td\",{children:empleado.salario}),/*#__PURE__*/_jsx(\"td\",{children:empleado.totalIngreso}),/*#__PURE__*/_jsx(\"td\",{children:empleado.totalDescuento}),/*#__PURE__*/_jsx(\"td\",{children:empleado.netoAPagar})]},index))})]})]})]});}export default CrearReportePlanillaMensual;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","CrearReportePlanillaMensual","_tiposPlanilla$find","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","selectedTipoPlanilla","setSelectedTipoPlanilla","tiposPlanilla","setTiposPlanilla","isLoading","setIsLoading","error","setError","reporteData","setReporteData","showPopup","setShowPopup","isProcessing","setIsProcessing","handleEscape","event","key","document","addEventListener","fetchTiposPlanilla","response","get","console","log","data","removeEventListener","handleGenerar","requestData","año","parseInt","mes","id_tip_planilla","post","empleados","length","warn","message","years","Array","from","_","i","Date","getFullYear","months","children","className","value","onChange","e","target","style","color","disabled","map","tipo","ID_tipo","Nombre","year","month","index","onClick","find","empleado","nombres","apellidos","salario","totalIngreso","totalDescuento","netoAPagar"],"sources":["C:/PROYECTOS IA/Planillas/frontend/src/components/crearReportePlanillaMensual.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CrearReportePlanillaMensual() {\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [selectedTipoPlanilla, setSelectedTipoPlanilla] = useState('');\r\n  const [tiposPlanilla, setTiposPlanilla] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [reporteData, setReporteData] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(true);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleEscape = (event) => {\r\n      if (event.key === 'Escape') {\r\n        setShowPopup(false);\r\n        setSelectedYear('');\r\n        setSelectedMonth('');\r\n        setSelectedTipoPlanilla('');\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleEscape);\r\n\r\n    // Cargar tipos de planilla\r\n    const fetchTiposPlanilla = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5001/api/tipos-planilla');\r\n        console.log('Tipos de planilla cargados:', response.data);\r\n        setTiposPlanilla(response.data);\r\n      } catch (error) {\r\n        console.error('Error al cargar tipos de planilla:', error);\r\n        setError('Error al cargar tipos de planilla. Por favor, intente de nuevo más tarde.');\r\n      }\r\n    };\r\n\r\n    fetchTiposPlanilla();\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscape);\r\n    };\r\n  }, []);\r\n\r\n  const handleGenerar = async () => {\r\n    setIsProcessing(true);\r\n    setError(null);\r\n    setReporteData(null);\r\n\r\n    const requestData = {\r\n      año: parseInt(selectedYear, 10),\r\n      mes: parseInt(selectedMonth, 10),\r\n      id_tip_planilla: parseInt(selectedTipoPlanilla, 10)\r\n    };\r\n\r\n    console.log('Iniciando generación de reporte');\r\n    console.log('Datos a enviar:', requestData);\r\n\r\n    try {\r\n      console.log('Enviando solicitud al servidor...');\r\n      const response = await axios.post('http://localhost:5001/api/planilla-mensual/reporte', requestData);\r\n      console.log('Respuesta del servidor recibida:', response.data);\r\n      \r\n      if (response.data && response.data.empleados) {\r\n        console.log('Número de empleados en el reporte:', response.data.empleados.length);\r\n      } else {\r\n        console.warn('La respuesta no contiene datos de empleados');\r\n      }\r\n\r\n      setReporteData(response.data);\r\n    } catch (error) {\r\n      console.error('Error al generar el reporte:', error);\r\n      if (error.response) {\r\n        console.error('Respuesta de error del servidor:', error.response.data);\r\n        setError(`Error al generar el reporte: ${error.response.data.message}`);\r\n      } else {\r\n        setError('Error al generar el reporte. Por favor, intente de nuevo más tarde.');\r\n      }\r\n    }\r\n\r\n    setIsProcessing(false);\r\n    setShowPopup(false);\r\n    console.log('Proceso de generación de reporte finalizado');\r\n  };\r\n\r\n  const years = Array.from({ length: 10 }, (_, i) => new Date().getFullYear() - i);\r\n  const months = [\r\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\r\n    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Listado de Empleados</h2>\r\n      \r\n      {showPopup && (\r\n        <div className=\"popup-overlay\">\r\n          <div className=\"popup\">\r\n            <div className=\"popup-header\">Seleccione los parámetros del Reporte</div>\r\n            <div className=\"popup-content\">\r\n              <div className=\"select-container\">\r\n                <select \r\n                  value={selectedTipoPlanilla} \r\n                  onChange={(e) => setSelectedTipoPlanilla(e.target.value)}\r\n                  className=\"select-input\"\r\n                  style={{ color: selectedTipoPlanilla === '' ? '#808080' : 'black' }}\r\n                >\r\n                  <option value=\"\" disabled>Seleccione tipo de planilla</option>\r\n                  {tiposPlanilla.map(tipo => (\r\n                    <option key={tipo.ID_tipo} value={tipo.ID_tipo}>{tipo.Nombre}</option>\r\n                  ))}\r\n                </select>\r\n                \r\n                <select \r\n                  value={selectedYear} \r\n                  onChange={(e) => setSelectedYear(e.target.value)}\r\n                  className=\"select-input\"\r\n                  style={{ color: selectedYear === '' ? '#808080' : 'black' }}\r\n                >\r\n                  <option value=\"\" disabled>Seleccione año</option>\r\n                  {years.map(year => (\r\n                    <option key={year} value={year}>{year}</option>\r\n                  ))}\r\n                </select>\r\n                \r\n                <select \r\n                  value={selectedMonth} \r\n                  onChange={(e) => setSelectedMonth(e.target.value)}\r\n                  className=\"select-input\"\r\n                  style={{ color: selectedMonth === '' ? '#808080' : 'black' }}\r\n                >\r\n                  <option value=\"\" disabled>Seleccione mes</option>\r\n                  {months.map((month, index) => (\r\n                    <option key={index} value={index + 1}>{month}</option>\r\n                  ))}\r\n                </select>\r\n                \r\n              </div>\r\n              <button \r\n                onClick={handleGenerar} \r\n                disabled={!selectedYear || !selectedMonth || !selectedTipoPlanilla || isProcessing}\r\n                className=\"submit-button\"\r\n              >\r\n                {isProcessing ? 'Procesando...' : 'Generar Reporte'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {reporteData && (\r\n        <div className=\"reporte-container\">\r\n          <h3>PLANILLA DE EMPLEADOS:</h3>\r\n          <p>AÑO: {selectedYear}</p>\r\n          <p>MES: {months[parseInt(selectedMonth) - 1]}</p>\r\n          <p>TIPO DE PLANILLA: {tiposPlanilla.find(tipo => tipo.ID_tipo === parseInt(selectedTipoPlanilla))?.Nombre}</p>\r\n          <table className=\"reporte-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nombres</th>\r\n                <th>Apellidos</th>\r\n                <th>Salario</th>\r\n                <th>Tot. Ingreso</th>\r\n                <th>Tot. Descto</th>\r\n                <th>Neto a pagar</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {reporteData.empleados.map((empleado, index) => (\r\n                <tr key={index}>\r\n                  <td>{empleado.nombres}</td>\r\n                  <td>{empleado.apellidos}</td>\r\n                  <td>{empleado.salario}</td>\r\n                  <td>{empleado.totalIngreso}</td>\r\n                  <td>{empleado.totalDescuento}</td>\r\n                  <td>{empleado.netoAPagar}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CrearReportePlanillaMensual;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}