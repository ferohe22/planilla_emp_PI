{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CrearPlanillaMensual(){const[tiposPlanilla,setTiposPlanilla]=useState([]);const[selectedTipo,setSelectedTipo]=useState('');const[selectedYear,setSelectedYear]=useState('');const[selectedMonth,setSelectedMonth]=useState('');useEffect(()=>{// Cargar tipos de planilla desde la API\naxios.get('/api/tipos-planilla').then(response=>{setTiposPlanilla(response.data);}).catch(error=>{console.error('Error al cargar tipos de planilla:',error);});},[]);const handleGenerar=()=>{// Aquí iría la lógica para generar la planilla\nconsole.log('Generando planilla:',{selectedTipo,selectedYear,selectedMonth});};const years=Array.from({length:10},(_,i)=>new Date().getFullYear()-i);const months=['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Generaci\\xF3n de Planilla Mensual\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedTipo,onChange:e=>setSelectedTipo(e.target.value),style:{width:'30%'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccione tipo de planilla\"}),tiposPlanilla.map(tipo=>/*#__PURE__*/_jsx(\"option\",{value:tipo.ID_tipo,children:tipo.nombre},tipo.ID_tipo))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedYear,onChange:e=>setSelectedYear(e.target.value),style:{width:'30%'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccione a\\xF1o\"}),years.map(year=>/*#__PURE__*/_jsx(\"option\",{value:year,children:year},year))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedMonth,onChange:e=>setSelectedMonth(e.target.value),style:{width:'30%'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Seleccione mes\"}),months.map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index+1,children:month},index))]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGenerar,children:\"Generar\"})]});}export default CrearPlanillaMensual;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","CrearPlanillaMensual","tiposPlanilla","setTiposPlanilla","selectedTipo","setSelectedTipo","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","get","then","response","data","catch","error","console","handleGenerar","log","years","Array","from","length","_","i","Date","getFullYear","months","children","style","display","justifyContent","marginBottom","value","onChange","e","target","width","map","tipo","ID_tipo","nombre","year","month","index","onClick"],"sources":["C:/PROYECTOS IA/Planillas/frontend/src/components/CrearPlanillaMensual.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CrearPlanillaMensual() {\r\n  const [tiposPlanilla, setTiposPlanilla] = useState([]);\r\n  const [selectedTipo, setSelectedTipo] = useState('');\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Cargar tipos de planilla desde la API\r\n    axios.get('/api/tipos-planilla')\r\n      .then(response => {\r\n        setTiposPlanilla(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error al cargar tipos de planilla:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleGenerar = () => {\r\n    // Aquí iría la lógica para generar la planilla\r\n    console.log('Generando planilla:', { selectedTipo, selectedYear, selectedMonth });\r\n  };\r\n\r\n  const years = Array.from({ length: 10 }, (_, i) => new Date().getFullYear() - i);\r\n  const months = [\r\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\r\n    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h2>Generación de Planilla Mensual</h2>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\r\n        <select \r\n          value={selectedTipo} \r\n          onChange={(e) => setSelectedTipo(e.target.value)}\r\n          style={{ width: '30%' }}\r\n        >\r\n          <option value=\"\">Seleccione tipo de planilla</option>\r\n          {tiposPlanilla.map(tipo => (\r\n            <option key={tipo.ID_tipo} value={tipo.ID_tipo}>{tipo.nombre}</option>\r\n          ))}\r\n        </select>\r\n        <select \r\n          value={selectedYear} \r\n          onChange={(e) => setSelectedYear(e.target.value)}\r\n          style={{ width: '30%' }}\r\n        >\r\n          <option value=\"\">Seleccione año</option>\r\n          {years.map(year => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n        <select \r\n          value={selectedMonth} \r\n          onChange={(e) => setSelectedMonth(e.target.value)}\r\n          style={{ width: '30%' }}\r\n        >\r\n          <option value=\"\">Seleccione mes</option>\r\n          {months.map((month, index) => (\r\n            <option key={index} value={index + 1}>{month}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <button onClick={handleGenerar}>Generar</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CrearPlanillaMensual;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}